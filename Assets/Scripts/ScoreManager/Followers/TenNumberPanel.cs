using System.Collections;
using System.Collections.Generic;
using UnityEngine;
public class TenNumberPanel : MonoBehaviour
{
    public AudioClip correctSound;
    private AudioSource audioSource;
    private List<GameObject> disabledBluePlayers = new List<GameObject>(); // Disable ‡§π‡•Å‡§è players ‡§ï‡•ã ‡§∏‡•ç‡§ü‡•ã‡§∞ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§≤‡§ø‡§∏‡•ç‡§ü

    public int panelNumber; // **Inspector ‡§Æ‡•á‡§Ç Set ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è Panel Number**

    private void Start()
    {
        audioSource = GetComponent<AudioSource>();
    }

    void OnTriggerEnter(Collider other)
    {
        if (other.CompareTag("Player")) // Player ‡§ï‡§æ Tag ‡§ö‡•á‡§ï ‡§ï‡§∞‡•á‡§Ç
        {
            ScoreManager.instance.AddScore(10);

            // Sound Play ‡§ï‡§∞‡•á‡§Ç
            if (correctSound != null && audioSource != null)
            {
                audioSource.PlayOneShot(correctSound);
            }

            // **Panel ‡§ï‡•á number ‡§ï‡•á ‡§Ö‡§®‡•Å‡§∏‡§æ‡§∞ players ‡§ï‡•ã enable ‡§ï‡§∞‡§®‡§æ**
            EnableBluePlayers(panelNumber);
        }
    }

    public void DisableBluePlayer(GameObject player)  // ‡§ú‡§¨ player disable ‡§π‡•ã ‡§§‡•ã ‡§â‡§∏‡•á ‡§≤‡§ø‡§∏‡•ç‡§ü ‡§Æ‡•á‡§Ç add ‡§ï‡§∞‡•á‡§Ç
   {
    if (!disabledBluePlayers.Contains(player))
    {
        disabledBluePlayers.Add(player);    
        Debug.Log("üõë Added to disabled list: " + player.name);
    }
    else
    {
        Debug.LogWarning("‚ö†Ô∏è Already in disabled list: " + player.name);
    }

    player.SetActive(false);
    Debug.Log("üîª Total Disabled Players: " + disabledBluePlayers.Count);
}

    void EnableBluePlayers(int count)
    {
    int available = disabledBluePlayers.Count;
    if (available == 0)
    {
        Debug.LogWarning("‚ùå No disabled players available to enable!");
        return;
    }

    int enableCount = Mathf.Min(count, available);
    Debug.Log("üîπ Enabling " + enableCount + " Disabled Blue Players. Total Available: " + available);

    for (int i = 0; i < enableCount; i++)
    {
        if (disabledBluePlayers[i] != null)
        {
            disabledBluePlayers[i].SetActive(true);
            Debug.Log("‚úÖ Enabled: " + disabledBluePlayers[i].name);
        }
    }

    // **Remove only the enabled players from the list**
    //disabledBluePlayers.RemoveRange(0, enableCount);
}
}
